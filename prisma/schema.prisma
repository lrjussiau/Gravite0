generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String
  role         Role
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  bookings     Flight[]
  pilot        Pilot?
}

model Pilot {
  id             Int                   @id @default(autoincrement())
  userId         Int                   @unique
  availability   AvailabilityStatus
  flights        Flight[]
  user           User                  @relation(fields: [userId], references: [id])
  unavailability PilotUnavailability[]
}

model Flight {
  id          Int          @id @default(autoincrement())
  date        DateTime
  timeStart   DateTime
  timeEnd     DateTime
  clientName  String
  pilotId     Int?
  status      FlightStatus
  createdById Int
  notes       String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  createdBy   User         @relation(fields: [createdById], references: [id])
  pilot       Pilot?       @relation(fields: [pilotId], references: [id])
}

model PilotUnavailability {
  id        Int      @id @default(autoincrement())
  pilotId   Int
  startTime DateTime
  endTime   DateTime
  reason    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pilot     Pilot    @relation(fields: [pilotId], references: [id])
}

enum Role {
  ADMIN
  COMPANY
  PILOT
}

enum AvailabilityStatus {
  AVAILABLE
  BOOKED
  OFF_DUTY
}

enum FlightStatus {
  PENDING
  BOOKED
  COMPLETED
  CANCELED
}
